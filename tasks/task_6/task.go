package task_6

import "fmt"

func Run() {
	i := 0
	//i = i + 1
	//  Инкремент(++) и декремент (--)

	//i += 1 // тоже самое i = i + 1
	i++ // Увеличивает на 1, тоже самое --> i = i + 1. Синтаксический сахар, и есть инкремент, используется для счетчиков.
	//fmt.Println(i)

	i = 10
	//i = i - 1
	//i -= 1 // тоже самое i = i - 1
	i-- //  декремент, уменьшает счетчик на 1, тоже самое, что две записи выше
	//fmt.Println(i)

	// ЦИКЛЫ
	// Базовый FOR: for init(инициализация, создаем и присваиваем переменную);conditions;
	//post statement (выражение которое  выполняется после выполнения оперции цикла) {
	// body }

	for i := 0; i < 10; i++ {
		//fmt.Println(i)
	}
	var j int
	for j = 2; j < 10; j++ {
		//fmt.Println(j)
	}
	sum := 1
	for sum < 25 {
		sum += sum //  к сумме прибавляем саму себя
		//fmt.Println(sum)
	}

	// for в качестве цикла while. for condition { // body }
	for sum <= 100 {
		sum += 1
		//fmt.Println(sum) // будет выводить с 33 тк в прошлой функции сум перезаписался на 32
	}

	// бесконечный цикл
	//for {
	//fmt.Println('stop this shit')
	//}

	// continue
	for i := 0; i < 20; i++ { // Нам нужно выводить только четные числа,
		// используем остаток от деления
		// 5 % 2 = 1
		if i%2 == 1 { // если остается остаток отделения, условие выполняется и мы переходит на строку ниже
			continue // тк условие выполнилось выше  continue прерывает итерацию и дальше не идет
		}
		//fmt.Println(i)
	}

	// continue  с меткой
Label1: // метка
	for i := 1; i < 20; i++ {
		for j := 1; j < 10; j++ { //пока 2ой цикл не выполнится, те пока J не будет больше 10 или не выполнится ИФ, возврата к первому циклу не будет
			//fmt.Println("i:", i, "j:", j)
			if i >= 10 {
				continue Label1 // возврат к метке
			}
		}
	}
	//Break
	for i := 0; i <= 20; i++ {
		if i >= 10 { //счетчик до 20 хотим останавливаем на 10 с помощью  break
			break // полностью выходит из текущего цикла, те завершили циел
		}
		//fmt.Println(i)
	}

	// Break  с меткой
Label2:
	for i := 1; i <= 20; i++ {
		for j := 1; j <= 10; j++ {
			fmt.Println("i:", i, "j:", j)
			if i >= 10 {
				break Label2 // ра
			}
		}
	}
}
